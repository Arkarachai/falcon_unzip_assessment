summary(model)
loess_fit <- loess(random_error$V3~random_error$V2)
lines(random_error$V2, predict(loess_fit), col = "blue")
tice)
xyplot(random_error$V3 ~ random_erro
xyplot(random_error$V3 ~ random_error$V2, type=c("smooth", "p"))
xyplot(random_error$V3 ~ random_error$V2, type=c("smooth", "p"))
library(lattice)
xyplot(random_error$V3 ~ random_error$V2, type=c("smooth", "p"))
xyplot(random_error$V3 ~ random_error$V2, type=c("smooth", "p"),col='r')
xyplot(random_error$V3 ~ random_error$V2, type=c("smooth", "p"),col='r')
xyplot(random_error$V3 ~ random_error$V2, type=c("smooth", "p"),col='red')
xyplot(random_error$V3 ~ random_error$V2)
xyplot(random_error$V3 ~ random_error$V2, type=c("smooth", "p"),col='red')
xyplot(random_error$V3 ~ random_error$V2)
library(lattice)
panel_fn <- function(x, y, ...)
{
panel.xyplot(x, y, ...)
panel.xyplot(x, y, type="smooth", col="red", ...)
}
xyplot(random_error$V3 ~ random_error$V2,panel=panel_fn)
xyplot(random_error$V3 ~ random_error$V2,panel=panel_fn)
xyplot(random_error$V3 ~ random_error$V2,panel=panel_fn)
lines(random_error$V2, predict(loess_fit), col = "blue")
plot(random_error$V2,random_error$V3,pch='.')
xyplot(random_error$V3 ~ random_error$V2,panel=panel_fn)
getwd()
dataset=read.table('boundary_size_vs_location')
head(dataset)
random_error=dataset[dataset$V1=='random_error',]
mis_join=dataset[dataset$V1=='mis_join',]
plot(random_error$V2,random_error$V4,pch='.')
plot(random_error$V3,random_error$V4,pch='.')
plot(random_error$V2,random_error$V4,pch='.')
plot(random_error$V3,random_error$V4,pch='.')
plot(random_error$V3,random_error$V4,pch='.')
plot(random_error$V2,random_error$V4,pch='.')
hist(random_error$V2)
plot(random_error$V2,random_error$V4,pch='.')
boxplot(random_error$V4)
plot(random_error$V2,random_error$V4,pch='.')
l=lm(random_error$V4~random_error$V2)
abline(model)
loess_fit <- loess(random_error$V4~random_error$V2)
lines(random_error$V2, predict(loess_fit), col = "blue")
panel_fn <- function(x, y, ...)
{
panel.xyplot(x, y, ...)
panel.xyplot(x, y, type="smooth", col="red", ...)
}
xyplot(random_error$V4 ~ random_error$V2,panel=panel_fn)
plot(mis_join$V2,mis_join$V4,pch='.')
library(lattice)
panel_fn <- function(x, y, ...)
{
panel.xyplot(x, y, ...)
panel.xyplot(x, y, type="smooth", col="red", ...)
}
xyplot(random_error$V4 ~ random_error$V2,panel=panel_fn)
plot(mis_join$V2,mis_join$V4,pch='.')
xyplot(random_error$V4 ~ random_error$V2,panel=panel_fn)
hist(random_error$V2)
plot(random_error$V2,random_error$V4,pch='.')
dataset=read.table('boundary_size_vs_location')
head(dataset)
colnames(dataset)=c('class','n_start_position','n_end_position','end_position','distance','edge')
random_error=dataset[dataset$class=='random_error',]
mis_join=dataset[dataset$class=='mis_join',]
plot(random_error$n_end_position,random_error$distance,pch='.')
hist(random_error$n_end_position)
hist(random_error$n_start_position)
hist(random_error$n_end_position)
hist(random_error$n_start_position)
hist(random_error$n_start_position)
hist(random_error$n_end_position)
hist(random_error$n_start_position)
hist(random_error$end_position)
hist(random_error$n_end_position)
boxplot(random_error$distance)
boxplot(random_error$distance~random_error$edge)
plot(random_error$n_end_position,random_error$distance,pch='.')
wilcox.test(distance~edge,data=random_error)
library(ggplot2)
ggplot(random_error,aes(x=edge,y=distance),log='y')+geom_violin()+geom_boxplot(width=.12, fill=I('black'), notch=T, col='grey40')+ylab('SNPs distance at boundary region')+scale_x_discrete(labels=c("Misjoined haplotig","Random error haplotig"))+xlab(NULL)+coord_cartesian(ylim = c(0, 60000))
ggplot(random_error,aes(x=edge,y=distance),log='y')+geom_violin()+geom_boxplot(width=.12, fill=I('black'), notch=T, col='grey40')+ylab('SNPs distance at boundary region')+xlab(NULL)+coord_cartesian(ylim = c(0, 60000))
ggplot(random_error,aes(x=edge,y=distance))+geom_violin()+geom_boxplot(width=.12, fill=I('black'), notch=T, col='grey40')+ylab('SNPs distance at boundary region')+xlab(NULL)+coord_cartesian(ylim = c(0, 60000))
ggplot(random_error,aes(x=edge,y=distance))+geom_violin()+geom_boxplot(width=.12, fill=I('black'), notch=T, col='grey40')+ylab('SNPs distance at boundary region')+scale+xlab(NULL)+coord_cartesian(ylim = c(0, 60000))
ggplot(random_error,aes(x=edge,y=distance),log='y')+geom_violin()+geom_boxplot(width=.12, fill=I('black'), notch=T, col='grey40')+ylab('SNPs distance at boundary region')+scale_x_discrete(labels=c("error at last SNPs","others")+xlab(NULL)+coord_cartesian(ylim = c(0, 60000))
#plot(random_error$V3,random_error$V4,pch='.')
model=lm(random_error$V4~random_error$V2)
abline(model)
summary(model)
loess_fit <- loess(random_error$V4~random_error$V2)
lines(random_error$V2, predict(loess_fit), col = "blue")
library(lattice)
panel_fn <- function(x, y, ...)
{
panel.xyplot(x, y, ...)
panel.xyplot(x, y, type="smooth", col="red", ...)
}
xyplot(random_error$V4 ~ random_error$V2,panel=panel_fn)
plot(mis_join$V2,mis_join$V4,pch='.')
ggplot(random_error,aes(x=edge,y=distance),log='y')+geom_violin()+geom_boxplot(width=.12, fill=I('black'), notch=T, col='grey40')+ylab('SNPs distance at boundary region')+scale_x_discrete(labels=c("error at last SNPs","others"))+xlab(NULL)+coord_cartesian(ylim = c(0, 60000))
dataset=read.table('boundary_size_vs_location')
head(dataset)
colnames(dataset)=c('class','n_start_position','n_end_position','distance','norm_distance','edge')
random_error=dataset[dataset$class=='random_error',]
mis_join=dataset[dataset$class=='mis_join',]
plot(random_error$n_end_position,random_error$norm_distance,pch='.')
plot(random_error$n_end_position,random_error$distance,pch='.')
plot(random_error$n_end_position,random_error$distance,pch='.')
hist(random_error$n_end_position)
hist(random_error$n_start_position)
hist(random_error$n_end_position)
dataset=read.table('boundary_size_vs_location')
head(dataset)
colnames(dataset)=c('class','n_start_position','n_end_position','distance','norm_distance','edge')
random_error=dataset[dataset$class=='random_error',]
mis_join=dataset[dataset$class=='mis_join',]
plot(random_error$n_end_position,random_error$distance,pch='.')
plot(random_error$n_end_position,random_error$norm_distance,pch='.')
ggplot(dataset,aes(x=class,y=distance),log='y')+geom_violin()+geom_boxplot(width=.12, fill=I('black'), notch=T, col='grey40')+ylab('SNPs distance at boundary region')+xlab(NULL)+coord_cartesian(ylim = c(0, 60000))
library(ggplot2)
ggplot(random_error,aes(x=edge,y=distance),log='y')+geom_violin()+geom_boxplot(width=.12, fill=I('black'), notch=T, col='grey40')+ylab('SNPs distance at boundary region')+scale_x_discrete(labels=c("error at last SNPs","others"))+xlab(NULL)+coord_cartesian(ylim = c(0, 60000))
ggplot(dataset,aes(x=class,y=distance),log='y')+geom_violin()+geom_boxplot(width=.12, fill=I('black'), notch=T, col='grey40')+ylab('SNPs distance at boundary region')+xlab(NULL)+coord_cartesian(ylim = c(0, 60000))
ggplot(random_error,aes(x=edge,y=distance),log='y')+geom_violin()+geom_boxplot(width=.12, fill=I('black'), notch=T, col='grey40')+ylab('SNPs distance at boundary region')+scale_x_discrete(labels=c("error at last SNPs","others"))+xlab(NULL)+coord_cartesian(ylim = c(0, 60000))
plot(random_error$n_end_position,random_error$distance,pch='.')
hist(random_error$n_end_position)
hist(random_error$n_start_position)
boxplot(random_error$distance~random_error$edge)
ggplot(dataset,aes(x=class,y=distance),log='y')+geom_violin()+geom_boxplot(width=.12, fill=I('black'), notch=T, col='grey40')+ylab('SNPs distance at boundary region')+xlab(NULL)+coord_cartesian(ylim = c(0, 60000))
dataset=read.table('box_plot_boundary_size')
library(ggplot2)
head(dataset)
colnames(dataset)=c('class','distance')
ggplot(dataset,aes(x=class,y=distance),log='y')+geom_violin()+geom_boxplot(width=.12, fill=I('black'), notch=T, col='grey40')+ylab('SNPs distance at boundary region')+xlab(NULL)+coord_cartesian(ylim = c(0, 60000))
dataset=read.table('boundary_size_vs_location')
colnames(dataset)=c('class','n_start_position','n_end_position','distance','norm_distance','edge')
ggplot(dataset,aes(x=class,y=distance),log='y')+geom_violin()+geom_boxplot(width=.12, fill=I('black'), notch=T, col='grey40')+ylab('SNPs distance at boundary region')+xlab(NULL)+coord_cartesian(ylim = c(0, 60000))
ggplot(dataset,aes(x=class,y=distance))+geom_violin()+geom_boxplot(width=.12, fill=I('black'), notch=T, col='grey40')+ylab('SNPs distance at boundary region')+xlab(NULL)+coord_cartesian(ylim = c(0, 60000))
hist(random_error$n_end_position)
hist(random_error$n_start_position)
hist(mis_join$n_end_position)
hist(mis_join$n_start_position)
par(mfrow=c(2,2))
hist(mis_join$n_start_position,xlab=NULL,freq=F,breaks=20,main="Mis-joined haplotigs")
par(mfrow=c(2,1))
hist(mis_join$n_end_position,xlab=NULL,freq=F,breaks=20,main="Mis-joined haplotigs")
hist(random_error$n_end_position,xlab='Normalized coordinates',freq=F,breaks=20,main="Random error haplotigs")
summary(mis_join)
summary(random_error)
wilcox.test(distance~class,data=dataset)
IQR(mis_join$distance)
IQR(random_error$distance)
ansari.test(mis_join$distance, random_error$distance)
wilcox.test(distance~class,data=dataset)
ansari.test(mis_join$distance, random_error$distance)
IQR(mis_join$distance)
IQR(random_error$distance)
var.test(mis_join$distance, random_error$distance)
ggplot(dataset,aes(x=class,y=distance))+geom_violin()+geom_boxplot(width=.12, fill=I('black'), notch=T, col='grey40')+ylab('SNPs distance at boundary region')+scale_x_discrete(labels=c("Misjoined haplotig","Random error haplotig"))+xlab(NULL)+coord_cartesian(ylim = c(0, 60000))
plot(random_error$n_end_position,random_error$distance,pch='.')
par(mfrow=c(1,1))
plot(random_error$n_end_position,random_error$distance,pch='.')
plot(random_error$n_end_position,random_error$norm_distance,pch='.')
boxplot(random_error$distance~random_error$edge)
wilcox.test(distance~edge,data=random_error)
ggplot(random_error,aes(x=edge,y=distance))+geom_violin()+geom_boxplot(width=.12, fill=I('black'), notch=T, col='grey40')+ylab('SNPs distance at boundary region')+scale_x_discrete(labels=c("error at the last SNPs","others"))+xlab(NULL)+coord_cartesian(ylim = c(0, 60000))
library(ggplot2)
dataset=read.table('boundary_size_vs_location')
head(dataset)
colnames(dataset)=c('class','n_start_position','n_end_position','distance','norm_distance','edge')
random_error=dataset[dataset$class=='random_error',]
mis_join=dataset[dataset$class=='mis_join',]
library(ggplot2)
dataset=read.table('boundary_size_vs_location')
head(dataset)
colnames(dataset)=c('class','n_start_position','n_end_position','distance','norm_distance','edge')
random_error=dataset[dataset$class=='random_error',]
mis_join=dataset[dataset$class=='mis_join',]
ggplot(dataset,aes(x=class,y=distance))+geom_violin()+geom_boxplot(width=.12, fill=I('black'), notch=T, col='grey40')+ylab('SNPs distance at boundary region')+scale_x_discrete(labels=c("Misjoined haplotig","Random error haplotig"))+xlab(NULL)+coord_cartesian(ylim = c(0, 60000))
dataset=read.table('haplotig_evaluation_table',sep='\t')
library(scales)
lowset=dataset[dataset$V21=='low',]
lowset=dataset[dataset$V21=='low',]
highset=dataset[dataset$V21=='high',]
mediumset=data.frame(rbind(dataset[dataset$V21=='inbetween',],dataset[dataset$V21=='mix',]))
mixset=dataset[dataset$V21=='mix',]
inbetweenset=dataset[dataset$V21=='inbetween',]
pchvalue=16 #16
alphavalue=0.3
#
plot(mixset$V15,mixset$V6,xlab='number of mis-phased SNPs',ylab='number of switch error',pch=pchvalue,col=alpha('magenta',alphavalue),type='p',xlim=c(0,430),ylim=c(0,50),cex=0.5)
plot(mixset$error_count,mixset$parent_switch_n,xlab='number of mis-phased SNPs',ylab='number of switch error',pch=pchvalue,col=alpha('magenta',alphavalue),type='p',xlim=c(0,430),ylim=c(0,50),cex=0.5)
lines(highset$error_count,highset$parent_switch_n,pch=pchvalue,col=alpha('blue',alphavalue),type='p',cex=0.5)
lines(lowset$error_count,lowset$parent_switch_n,pch=pchvalue,col=alpha('red',alphavalue),type='p',cex=0.5)
lines(inbetweenset$error_count,inbetweenset$parent_switch_n,pch=pchvalue,col=alpha('green',alphavalue),type='p',cex=0.5)
lowset=dataset[dataset$phasing_type=='low',]
lowset=dataset[dataset$phasing_type=='low',]
highset=dataset[dataset$phasing_type=='high',]
mediumset=data.frame(rbind(dataset[dataset$phasing_type=='inbetween',],dataset[dataset$phasing_type=='mix',]))
mixset=dataset[datasetphasing_type=='mix',]
inbetweenset=dataset[dataset$phasing_type=='inbetween',]
dataset=read.table('haplotig_evaluation_table',sep='\t',header=True)
library(scales)
lowset=dataset[dataset$phasing_type=='low',]
lowset=dataset[dataset$phasing_type=='low',]
highset=dataset[dataset$phasing_type=='high',]
mediumset=data.frame(rbind(dataset[dataset$phasing_type=='inbetween',],dataset[dataset$phasing_type=='mix',]))
mixset=dataset[datasetphasing_type=='mix',]
inbetweenset=dataset[dataset$phasing_type=='inbetween',]
mixset=dataset[dataset$phasing_type=='mix',]
mixset
summary(dataset)
dataset=read.table('haplotig_evaluation_table',sep='\t',header=True)
dataset=read.table('haplotig_evaluation_table',sep='\t',header=T)
library(scales)
lowset=dataset[dataset$phasing_type=='low',]
lowset=dataset[dataset$phasing_type=='low',]
highset=dataset[dataset$phasing_type=='high',]
mediumset=data.frame(rbind(dataset[dataset$phasing_type=='inbetween',],dataset[dataset$phasing_type=='mix',]))
mixset=dataset[dataset$phasing_type=='mix',]
inbetweenset=dataset[dataset$phasing_type=='inbetween',]
pchvalue=16 #16
alphavalue=0.3
plot(mixset$error_count,mixset$parent_switch_n,xlab='number of mis-phased SNPs',ylab='number of switch error',pch=pchvalue,col=alpha('magenta',alphavalue),type='p',xlim=c(0,430),ylim=c(0,50),cex=0.5)
lines(highset$error_count,highset$parent_switch_n,pch=pchvalue,col=alpha('blue',alphavalue),type='p',cex=0.5)
lines(lowset$error_count,lowset$parent_switch_n,pch=pchvalue,col=alpha('red',alphavalue),type='p',cex=0.5)
lines(inbetweenset$error_count,inbetweenset$parent_switch_n,pch=pchvalue,col=alpha('green',alphavalue),type='p',cex=0.5)
dataset=read.table('haplotig_evaluation_table',sep='\t',header=T)
library(scales)
lowset=dataset[dataset$phasing_type=='random_error',]
highset=dataset[dataset$phasing_type=='mis_join',]
mediumset=data.frame(rbind(dataset[dataset$phasing_type=='inbetween',],dataset[dataset$phasing_type=='mix',]))
mixset=dataset[dataset$phasing_type=='mix',]
inbetweenset=dataset[dataset$phasing_type=='inbetween',]
pchvalue=16 #16
alphavalue=0.3
plot(mixset$error_count,mixset$parent_switch_n,xlab='number of mis-phased SNPs',ylab='number of switch error',pch=pchvalue,col=alpha('magenta',alphavalue),type='p',xlim=c(0,430),ylim=c(0,50),cex=0.5)
lines(highset$error_count,highset$parent_switch_n,pch=pchvalue,col=alpha('blue',alphavalue),type='p',cex=0.5)
lines(lowset$error_count,lowset$parent_switch_n,pch=pchvalue,col=alpha('red',alphavalue),type='p',cex=0.5)
lines(inbetweenset$error_count,inbetweenset$parent_switch_n,pch=pchvalue,col=alpha('green',alphavalue),type='p',cex=0.5)
dataset=read.table('haplotig_evaluation_table',sep='\t',header=T)
library(scales)
lowset=dataset[dataset$phasing_type=='random_error',]
highset=dataset[dataset$phasing_type=='mis_join',]
mediumset=data.frame(rbind(dataset[dataset$phasing_type=='inbetween',],dataset[dataset$phasing_type=='mix',]))
mixset=dataset[dataset$phasing_type=='mix',]
inbetweenset=dataset[dataset$phasing_type=='inbetween',]
pdf(paste('scatter_n_error_vs_switch_error','.pdf',sep=""))
#plot(mixset$V15,mixset$V6,xlab='number of mis-phased SNPs',ylab='switch error',pch=16,col=alpha('magenta',alphavalue),type='p',xlim=c(0,430),ylim=c(0,50))
pchvalue=16 #16
alphavalue=0.3
plot(mixset$error_count,mixset$parent_switch_n,xlab='number of mis-phased SNPs',ylab='number of switch error',pch=pchvalue,col=alpha('magenta',alphavalue),type='p',xlim=c(0,430),ylim=c(0,50),cex=0.5)
plot(mixset$error_count,mixset$parent_switch_n,xlab='number of mis-phased SNPs',ylab='number of switch error',pch=pchvalue,col=alpha('magenta',alphavalue),type='p',xlim=c(0,430),ylim=c(0,50),cex=0.5)
dev.off()
plot(mixset$error_count,mixset$parent_switch_n,xlab='number of mis-phased SNPs',ylab='number of switch error',pch=pchvalue,col=alpha('magenta',alphavalue),type='p',xlim=c(0,430),ylim=c(0,50),cex=0.5)
lines(highset$error_count,highset$parent_switch_n,pch=pchvalue,col=alpha('blue',alphavalue),type='p',cex=0.5)
lines(lowset$error_count,lowset$parent_switch_n,pch=pchvalue,col=alpha('red',alphavalue),type='p',cex=0.5)
lines(inbetweenset$error_count,inbetweenset$parent_switch_n,pch=pchvalue,col=alpha('green',alphavalue),type='p',cex=0.5)
plot(mixset$error_count,mixset$parent_switch_n,xlab='number of mis-phased SNPs',ylab='number of switch error',pch=pchvalue,col=alpha('magenta',alphavalue),type='p',xlim=c(0,430),ylim=c(0,50),cex=0.5)
lines(inbetweenset$error_count,inbetweenset$parent_switch_n,pch=pchvalue,col=alpha('green',alphavalue),type='p',cex=0.5)
lines(highset$error_count,highset$parent_switch_n,pch=pchvalue,col=alpha('blue',alphavalue),type='p',cex=0.5)
lines(lowset$error_count,lowset$parent_switch_n,pch=pchvalue,col=alpha('red',alphavalue),type='p',cex=0.5)
plot(mixset$error_count,mixset$parent_switch_n,xlab='number of mis-phased SNPs',ylab='number of switch error',pch=pchvalue,col=alpha('magenta',alphavalue),type='p',xlim=c(0,430),ylim=c(0,20),cex=0.5)
lines(inbetweenset$error_count,inbetweenset$parent_switch_n,pch=pchvalue,col=alpha('green',alphavalue),type='p',cex=0.5)
lines(highset$error_count,highset$parent_switch_n,pch=pchvalue,col=alpha('blue',alphavalue),type='p',cex=0.5)
lines(lowset$error_count,lowset$parent_switch_n,pch=pchvalue,col=alpha('red',alphavalue),type='p',cex=0.5)
plot(mixset$error_count,mixset$parent_switch_n,xlab='number of mis-phased SNPs',ylab='number of switch error',pch=pchvalue,col=alpha('magenta',alphavalue),type='p',xlim=c(0,430),ylim=c(0,50),cex=0.5)
lines(inbetweenset$error_count,inbetweenset$parent_switch_n,pch=pchvalue,col=alpha('green',alphavalue),type='p',cex=0.5)
lines(highset$error_count,highset$parent_switch_n,pch=pchvalue,col=alpha('blue',alphavalue),type='p',cex=0.5)
lines(lowset$error_count,lowset$parent_switch_n,pch=pchvalue,col=alpha('red',alphavalue),type='p',cex=0.5)
plot(mixset$error_count,mixset$parent_switch_n,xlab='number of mis-phased SNPs',ylab='number of switch error',pch=pchvalue,col=alpha('magenta',alphavalue),type='p',xlim=c(0,430),ylim=c(0,30),cex=0.5)
lines(inbetweenset$error_count,inbetweenset$parent_switch_n,pch=pchvalue,col=alpha('green',alphavalue),type='p',cex=0.5)
lines(highset$error_count,highset$parent_switch_n,pch=pchvalue,col=alpha('blue',alphavalue),type='p',cex=0.5)
lines(lowset$error_count,lowset$parent_switch_n,pch=pchvalue,col=alpha('red',alphavalue),type='p',cex=0.5)
dataset=read.table('haplotig_evaluation_table',sep='\t',header=T)
print('max_error=',max(dataset$error_rate))
max(dataset$error_rate)
paste('max_error=',max(dataset$error_rate))
all_error=dataset[dataset$phasing_type!='no_error',]
paste('max_error=',max(all_error$error_rate))
paste('min_error=',max(all_error$error_rate))
paste('min_error=',min(all_error$error_rate))
no_error=dataset[dataset$phasing_type=='no_error',]
all_error=dataset[dataset$phasing_type!='no_error',]
lowset=dataset[dataset$phasing_type=='random_error',]
highset=dataset[dataset$phasing_type=='mis_join',]
#mediumset=data.frame(rbind(dataset[dataset$phasing_type=='inbetween',],dataset[dataset$phasing_type=='mix',]))
#mixset=dataset[dataset$phasing_type=='mix',]
#inbetweenset=dataset[dataset$phasing_type=='inbetween',]
print('total_area_no_error')
sum(no_error$snp_span_length)
print('longest_no_error')
paste(as.character(no_error[no_error$snp_span_length==max(no_error$snp_span_length),]$contig),max(no_error$snp_span_length),
'bp',no_error[no_error$snp_span_length==max(no_error$snp_span_length),]$N,'snps')
paste('longest_no_error',as.character(no_error[no_error$snp_span_length==max(no_error$snp_span_length),]$contig),'contain',
max(no_error$snp_span_length),'bp',no_error[no_error$snp_span_length==max(no_error$snp_span_length),]$N,'snps')
paste('longest_no_error', no_error[no_error$snp_span_length==max(no_error$snp_span_length),]$contig,'contain',
max(no_error$snp_span_length),'bp',no_error[no_error$snp_span_length==max(no_error$snp_span_length),]$N,'snps')
paste('longest_all_error', all_error[all_error$snp_span_length==max(all_error$snp_span_length),]$contig,'contain',
max(all_error$snp_span_length),'bp',all_error[all_error$snp_span_length==max(all_error$snp_span_length),]$N,'snps')
paste('longest_misjoin', highset[highset$snp_span_length==max(highset$snp_span_length),]$contig,'contain',
max(highset$snp_span_length),'bp',highset[highset$snp_span_length==max(highset$snp_span_length),]$N,'snps')
paste('longest_random_error', lowset[lowset$snp_span_length==max(lowset$snp_span_length),]$contig,'contain',
max(lowset$snp_span_length),'bp',lowset[lowset$snp_span_length==max(lowset$snp_span_length),]$N,'snps')
paste('highest_snp_density_no_error',no_error[no_error$N==max(no_error$N),]$contig)
paste('highest_snp_density_random_error',lowset[lowset$N==max(lowset$N),]$contig)
paste('highest_snp_density_mis_join',highset[highset$N==max(highset$N),]$contig)
paste('highest_error_count_random_error',lowset[lowset$error_count==max(lowset$error_count),]$contig)
paste('highest_error_count_mis_join',highset[highset$error_count==max(highset$error_count),]$contig)
paste('highest_snp_density_no_error',no_error[no_error$N==max(no_error$N),]$contig)
paste('highest_snp_density_random_error',lowset[lowset$N==max(lowset$N),]$contig)
paste('highest_snp_density_mis_join',highset[highset$N==max(highset$N),]$contig)
paste('highest_error_count_random_error',lowset[lowset$error_count==max(lowset$error_count),]$contig)
paste('highest_error_count_mis_join',highset[highset$error_count==max(highset$error_count),]$contig)
paste('longest_all_error', all_error[all_error$snp_span_length==max(all_error$snp_span_length),]$contig,'contain',
max(all_error$snp_span_length),'bp',all_error[all_error$snp_span_length==max(all_error$snp_span_length),]$N,'snps')
paste('longest_misjoin', highset[highset$snp_span_length==max(highset$snp_span_length),]$contig,'contain',
max(highset$snp_span_length),'bp',highset[highset$snp_span_length==max(highset$snp_span_length),]$N,'snps')
paste('longest_random_error', lowset[lowset$snp_span_length==max(lowset$snp_span_length),]$contig,'contain',
max(lowset$snp_span_length),'bp',lowset[lowset$snp_span_length==max(lowset$snp_span_length),]$N,'snps')
paste('total_area_error',sum(all_error$snp_span_length))
dim(all_error[all_error$error_count==1,])
paste('single_misphased_contig', nrow(all_error[all_error$error_count==1,]),'contigs; covering',
sum(nrow(all_error[all_error$error_count==1,]$snp_span_length)))
paste('single_misphased_contig', nrow(all_error[all_error$error_count==1,]),'contigs; covering',
sum(all_error[all_error$error_count==1,]$snp_span_length))
paste('single_misphased_contig', nrow(all_error[all_error$error_rate<0.10,]),'contigs; covering',
sum(all_error[all_error$error_count<0.10,]$snp_span_length))
paste('single_misphased_contig', nrow(all_error[all_error$error_rate<0.10,]),'contigs; covering',
sum(all_error[all_error$error_rate<0.10,]$snp_span_length))
dataset=read.table('haplotig_evaluation_table',sep='\t',header=T)
library(scales)
lowset=dataset[dataset$phasing_type=='random_error',]
highset=dataset[dataset$phasing_type=='mis_join',]
mediumset=data.frame(rbind(dataset[dataset$phasing_type=='inbetween',],dataset[dataset$phasing_type=='mix',]))
mixset=dataset[dataset$phasing_type=='mix',]
inbetweenset=dataset[dataset$phasing_type=='inbetween',]
#pdf(paste('scatter_n_error_vs_switch_error','.pdf',sep=""))
#plot(mixset$V15,mixset$V6,xlab='number of mis-phased SNPs',ylab='switch error',pch=16,col=alpha('magenta',alphavalue),type='p',xlim=c(0,430),ylim=c(0,50))
pchvalue=16 #16
alphavalue=0.3
#plot(mixset$V15,mixset$V6,xlab='number of mis-phased SNPs',ylab='switch error',pch=pchvalue,col=alpha('magenta',alphavalue),type='p',xlim=c(0,200),ylim=c(0,30))
plot(mixset$error_count,mixset$parent_switch_n,xlab='number of mis-phased SNPs',ylab='number of switch error',pch=pchvalue,col=alpha('magenta',alphavalue),type='p',xlim=c(0,430),ylim=c(0,30),cex=0.5)
lines(inbetweenset$error_count,inbetweenset$parent_switch_n,pch=pchvalue,col=alpha('green',alphavalue),type='p',cex=0.5)
lines(highset$error_count,highset$parent_switch_n,pch=pchvalue,col=alpha('blue',alphavalue),type='p',cex=0.5)
lines(lowset$error_count,lowset$parent_switch_n,pch=pchvalue,col=alpha('red',alphavalue),type='p',cex=0.5)
#dev.off()
plot(highset$error_count,highset$parent_switch_n,xlab='number of mis-phased SNPs',ylab='number of switch error',pch=pchvalue,col=alpha('blue',alphavalue),type='p',xlim=c(0,430),ylim=c(0,30),cex=0.5)
lines(lowset$error_count,lowset$parent_switch_n,pch=pchvalue,col=alpha('red',alphavalue),type='p',cex=0.5)
plot(highset$error_count,highset$parent_switch_n,xlab='number of mis-phased SNPs',ylab='number of switch error',pch=pchvalue,col=alpha('blue',alphavalue),type='p',xlim=c(0,430),ylim=c(0,15),cex=0.5)
lines(lowset$error_count,lowset$parent_switch_n,pch=pchvalue,col=alpha('red',alphavalue),type='p',cex=0.5)
plot(highset$error_count,highset$parent_switch_n,xlab='number of mis-phased SNPs',ylab='number of switch error',pch=pchvalue,col=alpha('blue',alphavalue),type='p',xlim=c(0,430),ylim=c(0,12),cex=0.5)
lines(lowset$error_count,lowset$parent_switch_n,pch=pchvalue,col=alpha('red',alphavalue),type='p',cex=0.5)
highset$error_count
highset$parent_switch_n
highset_premelt=cbind(highset$error_count,highset$parent_switch_n)
highset_premelt[:3]
highset_premelt[,3]
head(highset_premelt)
highset_premelt[0,3]
highset_premelt[0,3]
highset_premelt[0,2]
highset_premelt[,2]
highset_premelt=data.frame(highset$error_count,highset$parent_switch_n)
head(highset_premelt)
highset_melt=
f
library(reshape)
install.packages("reshape")
groupby(highset_premelt)
group_by(highset_premelt)
aggregate(highset_premelt,FUN=sum)
head9highset_premelt
head(highset_premelt)
aggregate(highset_premelt,by=c(highset.error_count,highset.parent_switch_n),FUN=sum)
aggregate(highset_premelt,by=c(error_count,parent_switch_n),FUN=sum)
aggregate(highset_premelt,by=highset.parent_switch_n,FUN=sum)
attach(mtcars)
head(mtcars)
aggregate(highset_premelt,by=list(error_count,parent_switch_n),FUN=sum)
aggregate(highset_premelt,by=list(highset.error_count,highset.parent_switch_n),FUN=sum)
head(highset_premelt$highset.error_count)
attach(mtcars)
aggdata <-aggregate(mtcars, by=list(cyl,vs),
FUN=mean, na.rm=TRUE)
print(aggdata)
detach(mtcars)
attach(highset_premelt)
aggregate(highset_premelt,by=list(highset.error_count,highset.parent_switch_n),FUN=sum)
highset_premelt[highset.error_count==190,]
highset.error_count==190
highset_premelt[which(highset.error_count==190),]
aggregate(highset_premelt,by=list(highset.error_count,highset.parent_switch_n),FUN=sum)
aggregate(list(numdup=rep(1,nrow(highset_premelt))), highset_premelt, length)
highset_premelt[which(highset.error_count==10),]
highset_premelt=data.frame(highset$error_count,highset$parent_switch_n)
highset_aggregate=aggregate(list(numdup=rep(1,nrow(highset_premelt))), highset_premelt, length)
head(highset_aggregate)
highset_premelt=cbind(highset$error_count,highset$parent_switch_n)
colsnames(highset_premelt)=c("error_count","parent_switch_n")
colnames(highset_premelt)=c("error_count","parent_switch_n")
head(highset_premelt)
highset_aggregate=aggregate(list(numdup=rep(1,nrow(highset_premelt))), highset_premelt, length)
highset_premelt=cbind(highset$error_count,highset$parent_switch_n)
colnames(highset_premelt)=c("error_count","parent_switch_n")
highset_aggregate=aggregate(list(numdup=rep(1,nrow(highset_premelt))), highset_premelt, length)
highset_premelt=data.frame(cbind(highset$error_count,highset$parent_switch_n))
colnames(highset_premelt)=c("error_count","parent_switch_n")
highset_aggregate=aggregate(list(numdup=rep(1,nrow(highset_premelt))), highset_premelt, length)
head(highset_premelt)
plot(highset_aggregate$error_count,highset_aggregate$parent_switch_n,xlab='number of mis-phased SNPs',ylab='number of switch error',pch=pchvalue,col=alpha('blue',alphavalue),type='p',xlim=c(0,430),ylim=c(0,12),cex=)
head(highset_aggregate)
plot(highset_aggregate$error_count,highset_aggregate$parent_switch_n,xlab='number of mis-phased SNPs',ylab='number of switch error',pch=pchvalue,col=alpha('blue',alphavalue),type='p',xlim=c(0,430),ylim=c(0,12),cex=highset_aggregate$numdup)
plot(highset_aggregate$error_count,highset_aggregate$parent_switch_n,xlab='number of mis-phased SNPs',ylab='number of switch error',pch=pchvalue,col=alpha('blue',alphavalue),type='p',xlim=c(0,430),ylim=c(0,12),cex=0.1*highset_aggregate$numdup)
plot(highset_aggregate$error_count,highset_aggregate$parent_switch_n,xlab='number of mis-phased SNPs',ylab='number of switch error',pch=pchvalue,col=alpha('blue',alphavalue),type='p',xlim=c(0,430),ylim=c(0,12),cex=0.2*highset_aggregate$numdup)
plot(lowset_aggregate$error_count,lowset_aggregate$parent_switch_n,xlab='number of mis-phased SNPs',ylab='number of switch error',pch=pchvalue,col=alpha('blue',alphavalue),type='p',xlim=c(0,430),ylim=c(0,12),cex=0.2*lowset_aggregate$numdup)
lowset_premelt=data.frame(cbind(lowset$error_count,lowset$parent_switch_n))
colnames(lowset_premelt)=c("error_count","parent_switch_n")
lowset_aggregate=aggregate(list(numdup=rep(1,nrow(lowset_premelt))), lowset_premelt, length)
plot(highset_aggregate$error_count,highset_aggregate$parent_switch_n,xlab='number of mis-phased SNPs',ylab='number of switch error',pch=pchvalue,col=alpha('blue',alphavalue),type='p',xlim=c(0,430),ylim=c(0,12),cex=0.2*highset_aggregate$numdup)
plot(lowset_aggregate$error_count,lowset_aggregate$parent_switch_n,xlab='number of mis-phased SNPs',ylab='number of switch error',pch=pchvalue,col=alpha('blue',alphavalue),type='p',xlim=c(0,430),ylim=c(0,12),cex=0.2*lowset_aggregate$numdup)
plot(highset_aggregate$error_count,highset_aggregate$parent_switch_n,xlab='number of mis-phased SNPs',ylab='number of switch error',pch=pchvalue,col=alpha('blue',alphavalue),type='p',xlim=c(0,430),ylim=c(0,12),cex=0.2*log10(highset_aggregate$numdup)
plot(lowset_aggregate$error_count,lowset_aggregate$parent_switch_n,xlab='number of mis-phased SNPs',ylab='number of switch error',pch=pchvalue,col=alpha('blue',alphavalue),type='p',xlim=c(0,430),ylim=c(0,12),cex=0.2*log10(lowset_aggregate$numdup))
#plot(mixset$error_count,mixset$parent_switch_n,xlab='number of mis-phased SNPs',ylab='number of switch error',pch=pchvalue,col=alpha('magenta',alphavalue),type='p',xlim=c(0,430),ylim=c(0,30),cex=0.5)
#lines(inbetweenset$error_count,inbetweenset$parent_switch_n,pch=pchvalue,col=alpha('green',alphavalue),type='p',cex=0.5)
#lines(highset$error_count,highset$parent_switch_n,pch=pchvalue,col=alpha('blue',alphavalue),type='p',cex=0.5)
lines(lowset$error_count,lowset$parent_switch_n,pch=pchvalue,col=alpha('red',alphavalue),type='p',cex=0.5)
#dev.off()
highset_premelt=cbind(highset$error_count,highset$parent_switch_n)
plot(highset_aggregate$error_count,highset_aggregate$parent_switch_n,xlab='number of mis-phased SNPs',ylab='number of switch error',pch=pchvalue,col=alpha('blue',alphavalue),type='p',xlim=c(0,430),ylim=c(0,12),cex=0.2*log(highset_aggregate$numdup)
plot(lowset_aggregate$error_count,lowset_aggregate$parent_switch_n,xlab='number of mis-phased SNPs',ylab='number of switch error',pch=pchvalue,col=alpha('blue',alphavalue),type='p',xlim=c(0,430),ylim=c(0,12),cex=0.2*log10(lowset_aggregate$numdup))
#plot(mixset$error_count,mixset$parent_switch_n,xlab='number of mis-phased SNPs',ylab='number of switch error',pch=pchvalue,col=alpha('magenta',alphavalue),type='p',xlim=c(0,430),ylim=c(0,30),cex=0.5)
#lines(inbetweenset$error_count,inbetweenset$parent_switch_n,pch=pchvalue,col=alpha('green',alphavalue),type='p',cex=0.5)
#lines(highset$error_count,highset$parent_switch_n,pch=pchvalue,col=alpha('blue',alphavalue),type='p',cex=0.5)
lines(lowset$error_count,lowset$parent_switch_n,pch=pchvalue,col=alpha('red',alphavalue),type='p',cex=0.5)
#dev.off()
highset_premelt=cbind(highset$error_count,highset$parent_switch_n)
plot(highset_aggregate$error_count,highset_aggregate$parent_switch_n,xlab='number of mis-phased SNPs',ylab='number of switch error',pch=pchvalue,col=alpha('blue',alphavalue),type='p',xlim=c(0,430),ylim=c(0,12),cex=0.2+log(highset_aggregate$numdup)
plot(lowset_aggregate$error_count,lowset_aggregate$parent_switch_n,xlab='number of mis-phased SNPs',ylab='number of switch error',pch=pchvalue,col=alpha('blue',alphavalue),type='p',xlim=c(0,430),ylim=c(0,12),cex=0.2*log10(lowset_aggregate$numdup))
#plot(mixset$error_count,mixset$parent_switch_n,xlab='number of mis-phased SNPs',ylab='number of switch error',pch=pchvalue,col=alpha('magenta',alphavalue),type='p',xlim=c(0,430),ylim=c(0,30),cex=0.5)
#lines(inbetweenset$error_count,inbetweenset$parent_switch_n,pch=pchvalue,col=alpha('green',alphavalue),type='p',cex=0.5)
#lines(highset$error_count,highset$parent_switch_n,pch=pchvalue,col=alpha('blue',alphavalue),type='p',cex=0.5)
lines(lowset$error_count,lowset$parent_switch_n,pch=pchvalue,col=alpha('red',alphavalue),type='p',cex=0.5)
#dev.off()
highset_premelt=cbind(highset$error_count,highset$parent_switch_n)
plot(highset_aggregate$error_count,highset_aggregate$parent_switch_n,xlab='number of mis-phased SNPs',ylab='number of switch error',pch=pchvalue,col=alpha('blue',alphavalue),type='p',xlim=c(0,430),ylim=c(0,12),cex=log(0.1+highset_aggregate$numdup)
plot(lowset_aggregate$error_count,lowset_aggregate$parent_switch_n,xlab='number of mis-phased SNPs',ylab='number of switch error',pch=pchvalue,col=alpha('blue',alphavalue),type='p',xlim=c(0,430),ylim=c(0,12),cex=0.2*log10(lowset_aggregate$numdup))
#plot(mixset$error_count,mixset$parent_switch_n,xlab='number of mis-phased SNPs',ylab='number of switch error',pch=pchvalue,col=alpha('magenta',alphavalue),type='p',xlim=c(0,430),ylim=c(0,30),cex=0.5)
#lines(inbetweenset$error_count,inbetweenset$parent_switch_n,pch=pchvalue,col=alpha('green',alphavalue),type='p',cex=0.5)
#lines(highset$error_count,highset$parent_switch_n,pch=pchvalue,col=alpha('blue',alphavalue),type='p',cex=0.5)
lines(lowset$error_count,lowset$parent_switch_n,pch=pchvalue,col=alpha('red',alphavalue),type='p',cex=0.5)
#dev.off()
highset_premelt=cbind(highset$error_count,highset$parent_switch_n)
plot(highset_aggregate$error_count,highset_aggregate$parent_switch_n,xlab='number of mis-phased SNPs',ylab='number of switch error',pch=pchvalue,col=alpha('blue',alphavalue),type='p',xlim=c(0,430),ylim=c(0,12),cex=log(0.1+highset_aggregate$numdup)
plot(lowset_aggregate$error_count,lowset_aggregate$parent_switch_n,xlab='number of mis-phased SNPs',ylab='number of switch error',pch=pchvalue,col=alpha('blue',alphavalue),type='p',xlim=c(0,430),ylim=c(0,12),cex=0.2*log10(lowset_aggregate$numdup))
#plot(mixset$error_count,mixset$parent_switch_n,xlab='number of mis-phased SNPs',ylab='number of switch error',pch=pchvalue,col=alpha('magenta',alphavalue),type='p',xlim=c(0,430),ylim=c(0,30),cex=0.5)
#lines(inbetweenset$error_count,inbetweenset$parent_switch_n,pch=pchvalue,col=alpha('green',alphavalue),type='p',cex=0.5)
#lines(highset$error_count,highset$parent_switch_n,pch=pchvalue,col=alpha('blue',alphavalue),type='p',cex=0.5)
lines(lowset$error_count,lowset$parent_switch_n,pch=pchvalue,col=alpha('red',alphavalue),type='p',cex=0.5)
#dev.off()
highset_premelt=cbind(highset$error_count,highset$parent_switch_n)
plot(highset_aggregate$error_count,highset_aggregate$parent_switch_n,xlab='number of mis-phased SNPs',ylab='number of switch error',pch=pchvalue,col=alpha('blue',alphavalue),type='p',xlim=c(0,430),ylim=c(0,12),cex=log(0.1+highset_aggregate$numdup))
log(4)
log(10)
plot(highset_aggregate$error_count,highset_aggregate$parent_switch_n,xlab='number of mis-phased SNPs',ylab='number of switch error',pch=pchvalue,col=alpha('blue',alphavalue),type='p',xlim=c(0,430),ylim=c(0,12),cex=log10(0.1+highset_aggregate$numdup))
plot(lowset_aggregate$error_count,lowset_aggregate$parent_switch_n,xlab='number of mis-phased SNPs',ylab='number of switch error',pch=pchvalue,col=alpha('blue',alphavalue),type='p',xlim=c(0,430),ylim=c(0,12),cex=0.2*log10(lowset_aggregate$numdup))
plot(lowset_aggregate$error_count,lowset_aggregate$parent_switch_n,xlab='number of mis-phased SNPs',ylab='number of switch error',pch=pchvalue,col=alpha('red',alphavalue),type='p',xlim=c(0,430),ylim=c(0,12),cex=log10(0.1+lowset_aggregate$numdup))
plot(highset_aggregate$error_count,highset_aggregate$parent_switch_n,xlab='number of mis-phased SNPs',ylab='number of switch error',pch=pchvalue,col=alpha('blue',alphavalue),type='p',xlim=c(0,430),ylim=c(0,12),cex=log10(0.1+highset_aggregate$numdup))
plot(lowset_aggregate$error_count,lowset_aggregate$parent_switch_n,xlab='number of mis-phased SNPs',ylab='number of switch error',pch=pchvalue,col=alpha('red',alphavalue),type='p',xlim=c(0,430),ylim=c(0,12),cex=log10(0.1+lowset_aggregate$numdup))
plot(highset_aggregate$error_count,highset_aggregate$parent_switch_n,xlab='number of mis-phased SNPs',ylab='number of switch error',pch=pchvalue,col=alpha('blue',alphavalue),type='p',xlim=c(0,430),ylim=c(0,12),cex=log10(highset_aggregate$numdup))
line(lowset_aggregate$error_count,lowset_aggregate$parent_switch_n,xlab='number of mis-phased SNPs',ylab='number of switch error',pch=pchvalue,col=alpha('red',alphavalue),type='p',xlim=c(0,430),ylim=c(0,12),cex=log10(lowset_aggregate$numdup))
plot(highset_aggregate$error_count,highset_aggregate$parent_switch_n,xlab='number of mis-phased SNPs',ylab='number of switch error',pch=pchvalue,col=alpha('blue',alphavalue),type='p',xlim=c(0,430),ylim=c(0,12),cex=log10(highset_aggregate$numdup))
line(lowset_aggregate$error_count,lowset_aggregate$parent_switch_n,pch=pchvalue,col=alpha('red',alphavalue),type='p',xlim=c(0,430),ylim=c(0,12),cex=log10(lowset_aggregate$numdup))
lines(lowset_aggregate$error_count,lowset_aggregate$parent_switch_n,pch=pchvalue,col=alpha('red',alphavalue),type='p',xlim=c(0,430),ylim=c(0,12),cex=log10(lowset_aggregate$numdup))
plot(highset_aggregate$error_count,highset_aggregate$parent_switch_n,xlab='number of mis-phased SNPs',ylab='number of switch error',pch=pchvalue,col=alpha('blue',alphavalue),type='p',xlim=c(0,430),ylim=c(0,12),cex=log(highset_aggregate$numdup))
lines(lowset_aggregate$error_count,lowset_aggregate$parent_switch_n,pch=pchvalue,col=alpha('red',alphavalue),type='p',xlim=c(0,430),ylim=c(0,12),cex=log(lowset_aggregate$numdup))
log2(4)
log(4)
plot(highset_aggregate$error_count,highset_aggregate$parent_switch_n,xlab='number of mis-phased SNPs',ylab='number of switch error',pch=pchvalue,col=alpha('blue',alphavalue),type='p',xlim=c(0,430),ylim=c(0,12),cex=log(highset_aggregate$numdup+0.1))
lines(lowset_aggregate$error_count,lowset_aggregate$parent_switch_n,pch=pchvalue,col=alpha('red',alphavalue),type='p',xlim=c(0,430),ylim=c(0,12),cex=log(lowset_aggregate$numdup+0.1))
plot(highset_aggregate$error_count,highset_aggregate$parent_switch_n,xlab='number of mis-phased SNPs',ylab='number of switch error',pch=pchvalue,col=alpha('blue',alphavalue),type='p',xlim=c(0,430),ylim=c(0,12),cex=log(highset_aggregate$numdup+1))
lines(lowset_aggregate$error_count,lowset_aggregate$parent_switch_n,pch=pchvalue,col=alpha('red',alphavalue),type='p',xlim=c(0,430),ylim=c(0,12),cex=log(lowset_aggregate$numdup+1))
log10(4)
alphavalue=0.2
plot(highset_aggregate$error_count,highset_aggregate$parent_switch_n,xlab='number of mis-phased SNPs',ylab='number of switch error',pch=pchvalue,col=alpha('blue',alphavalue),type='p',xlim=c(0,430),ylim=c(0,12),cex=log(highset_aggregate$numdup+1))
lines(lowset_aggregate$error_count,lowset_aggregate$parent_switch_n,pch=pchvalue,col=alpha('red',alphavalue),type='p',xlim=c(0,430),ylim=c(0,12),cex=log(lowset_aggregate$numdup+1))
summary(highset_aggregate)
summary(lowset_aggregate)
plot(highset_aggregate$error_count,highset_aggregate$parent_switch_n,xlab='number of mis-phased SNPs',ylab='number of switch error',pch=pchvalue,col=alpha('blue',alphavalue),type='p',xlim=c(0,528),ylim=c(0,10),cex=log(highset_aggregate$numdup+1))
lines(lowset_aggregate$error_count,lowset_aggregate$parent_switch_n,pch=pchvalue,col=alpha('red',alphavalue),type='p',cex=log(lowset_aggregate$numdup+1))
alphavalue=0.1
highset_premelt=data.frame(cbind(highset$error_count,highset$parent_switch_n))
colnames(highset_premelt)=c("error_count","parent_switch_n")
highset_aggregate=aggregate(list(numdup=rep(1,nrow(highset_premelt))), highset_premelt, length)
lowset_premelt=data.frame(cbind(lowset$error_count,lowset$parent_switch_n))
colnames(lowset_premelt)=c("error_count","parent_switch_n")
lowset_aggregate=aggregate(list(numdup=rep(1,nrow(lowset_premelt))), lowset_premelt, length)
plot(highset_aggregate$error_count,highset_aggregate$parent_switch_n,xlab='number of mis-phased SNPs',ylab='number of switch error',pch=pchvalue,col=alpha('blue',alphavalue),type='p',xlim=c(0,528),ylim=c(0,10),cex=log(highset_aggregate$numdup+1))
lines(lowset_aggregate$error_count,lowset_aggregate$parent_switch_n,pch=pchvalue,col=alpha('red',alphavalue),type='p',cex=log(lowset_aggregate$numdup+1))
alphavalue=0.2
plot(highset_aggregate$error_count,highset_aggregate$parent_switch_n,xlab='number of mis-phased SNPs',ylab='number of switch error',pch=pchvalue,col=alpha('blue',alphavalue),type='p',xlim=c(0,528),ylim=c(0,10),cex=log(highset_aggregate$numdup+1))
lines(lowset_aggregate$error_count,lowset_aggregate$parent_switch_n,pch=pchvalue,col=alpha('red',alphavalue),type='p',cex=log(lowset_aggregate$numdup+1))
plot(highset_aggregate$error_count,highset_aggregate$parent_switch_n,xlab='number of mis-phased SNPs',ylab='number of switch error',pch=pchvalue,col=alpha('blue',alphavalue),type='p',xlim=c(0,528),ylim=c(0,10),pch=15,cex=log(highset_aggregate$numdup+1))
plot(highset_aggregate$error_count,highset_aggregate$parent_switch_n,xlab='number of mis-phased SNPs',ylab='number of switch error',pch=15,col=alpha('blue',alphavalue),type='p',xlim=c(0,528),ylim=c(0,10),cex=log(highset_aggregate$numdup+1))
lines(lowset_aggregate$error_count,lowset_aggregate$parent_switch_n,pch=16,col=alpha('red',alphavalue),type='p',cex=log(lowset_aggregate$numdup+1))
plot(highset_aggregate$error_count,highset_aggregate$parent_switch_n,xlab='number of mis-phased SNPs',ylab='number of switch error',pch=15,col=alpha('blue',alphavalue),type='p',xlim=c(0,528),ylim=c(0,10),cex=log(highset_aggregate$numdup+1))
lines(lowset_aggregate$error_count,lowset_aggregate$parent_switch_n,pch=18,col=alpha('red',alphavalue),type='p',cex=log(lowset_aggregate$numdup+1))
plot(highset_aggregate$error_count,highset_aggregate$parent_switch_n,xlab='number of mis-phased SNPs',ylab='number of switch error',pch=15,col=alpha('blue',alphavalue),type='p',xlim=c(0,528),ylim=c(0,10),cex=log(highset_aggregate$numdup+1))
lines(lowset_aggregate$error_count,lowset_aggregate$parent_switch_n,pch=16,col=alpha('red',alphavalue),type='p',cex=log(lowset_aggregate$numdup+1))
